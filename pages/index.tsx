import Head from "next/head";

import styles from "@/styles/Home.module.scss";

import { Barlow_Semi_Condensed } from "next/font/google";

const barlow = Barlow_Semi_Condensed({
    weight: ["600", "700"],
    subsets: ["latin"]
});

import { Header, Main, Rules, Footer } from "@/components";
import { useState, useEffect } from "react";
import { options } from "@/data/options_data";
import Choice from "@/model/Choice";
import { stringify } from "querystring";

export default function Home() {
    const [isRulesTableOpen, setIsRulesTableOpen] = useState(false);

    const initialValue = {
        id: 12,
        choice: "",
        icon: "",
        position: ""
    };
    const [userChoice, setUserChoice] = useState<Choice>(initialValue);
    const [houseChoice, setHouseChoice] = useState<Choice>({
        id: 11,
        choice: "",
        icon: "",
        position: ""
    });
    const [message, setMessage] = useState("");
    const [score, setScore] = useState(0);

    const [isUserWinner, setIsUserWinner] = useState(false);
    const [isHouseWinner, setIsHouseWinner] = useState(false);

    const handleUserChoice = (choice: string) => {
        const userOption = options.filter(
            option => option.choice === choice
        )[0];

        setUserChoice(userOption);
    };

    const hanldeHouseChoice = () => {
        const randomNumber = Math.floor(Math.random() * options.length);
        setHouseChoice(options[randomNumber]);
    };

    const handleMessage = () => {
        const user = userChoice && userChoice.choice;
        const house = houseChoice && houseChoice.choice;
        switch (user + house) {
            case "paperrock":
            case "rockscissors":
            case "scissorspaper":
                setMessage("You win");
                setScore(prev => prev + 1);
                setIsUserWinner(true);
                setIsHouseWinner(false);
                break;

            case "rockpaper":
            case "paperscissors":
            case "scissorsrock":
                setMessage("You lose");
                setScore(prev => prev - 1);
                setIsHouseWinner(true);
                setIsUserWinner(false);
                break;

            case "rockrock":
            case "paperpaper":
            case "scissorsscissors":
                setMessage("It is a draw");
                setIsHouseWinner(false);
                setIsUserWinner(false);
                break;
        }
    };

    useEffect(() => {
        handleMessage();
    }, [userChoice, houseChoice]);

    const handleGame = (choice: string) => {
        handleUserChoice(choice);
        hanldeHouseChoice();
    };

    return (
        <div
            className={`${styles.home_container} ${barlow.className}  ${
                isRulesTableOpen && styles.home_container_bg
            }`}
        >
            <Head>
                <title>Frontend Mentor | Rock, Paper, Scissors</title>
                <meta
                    name="description"
                    content="Generated by create next app"
                />
                <meta
                    name="viewport"
                    content="width=device-width, initial-scale=1"
                />
                <link rel="icon" href="/images/favicon-32x32.png" />
            </Head>

            <Header totalScore={score} />

            <Main
                userChoice={userChoice}
                houseChoice={houseChoice}
                message={message}
                onGameResult={handleGame}
                onNewGame={() => setUserChoice(initialValue)}
                userResult={isUserWinner}
                houseResult={isHouseWinner}
            />
            {isRulesTableOpen && (
                <Rules onCloseRulesTable={() => setIsRulesTableOpen(false)} />
            )}

            <Footer onOpenRulesTable={() => setIsRulesTableOpen(true)} />
        </div>
    );
}
